services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    
    app.form.extension.banner_type_extension:
        class: App\Form\Type\BannerTypeTaxon
        tags:
            - { name: 'form.type_extension', extended_type: BitBag\SyliusBannerPlugin\Form\Type\BannerType }


    App\EventListener\TaxonBannerListener:
        arguments:
            $requestStack: '@request_stack'
            $customBannerService: '@App\Service\CustomBannerService'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.controller', method: 'onKernelController' }

    App\Service\CustomBannerService:
        arguments:
            $connection: '@doctrine.dbal.default_connection'


    app.listener.email_logging:
        class: App\EventListener\EmailLoggingListener
        arguments: ['@doctrine.orm.entity_manager',$logger: '@logger']
        tags:
            - { name: 'kernel.event_listener', event: 'mailer.send', method: 'onEmailSend' }

    app.listener.admin_menu:
        class: App\EventListener\AdminMenuListener
        tags:
            - { name: 'kernel.event_listener', event: 'sylius.menu.admin.main', method: 'addAdminMenuItem' }

